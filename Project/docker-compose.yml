services:
  auctionservice:
    image: fullstackanalyst/auctionservice:latest
    build:
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - ConnectionStrings__ACS=Host=postgres;Port=5432;Database=AuctionDB;Username=postgres;Password=1A2B3C
      - IdentityServiceURL=http://identityservice
    ports:
      - "7001:80"
    volumes:
      - ./src/AuctionService:/app
      - vsdbg:/remote_debugger
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  searchservice:
    image: fullstackanalyst/searchservice:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__SCS=mongodb://mongoroot:mongopw@mongodb:27017
      - AuctionServiceURL=http://auctionservice
      - RabbitMQ__HostName=rabbitmq
    ports:
      - "7002:80"
    volumes:
      - ./src/SearchService:/app
      - vsdbg:/remote_debugger
    tty: true
    depends_on:
      rabbitmq:
        condition: service_started
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  identityservice:
    image: fullstackanalyst/identityservice:latest
    build:
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__ICS=Host=postgres;Port=5432;Database=IdentityDB;Username=postgres;Password=1A2B3C
    ports:
      - "7003:80"
    volumes:
      - ./src/IdentityService:/app
      - vsdbg:/remote_debugger
    tty: true
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  gatewayservice:
    image: fullstackanalyst/gatewayservice:latest
    build:
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "7000:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1A2B3C
      POSTGRES_DB: AuctionDB
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoroot
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mongosh --quiet -u mongoroot -p mongopw --authenticationDatabase admin --eval \"quit(db.runCommand({ ping: 1 }).ok ? 0 : 1)\""
        ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:15672 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
  mongo_data:
  vsdbg: