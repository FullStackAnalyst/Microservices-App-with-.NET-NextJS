// <auto-generated />
using System;
using AuctionService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuctionService.Migrations
{
    [DbContext(typeof(AuctionDataContext))]
    partial class AuctionDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
.HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuctionService.Entities.Models.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AuctionEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CurrentHighBid")
                        .HasColumnType("integer");

                    b.Property<int>("ReservePrice")
                        .HasColumnType("integer");

                    b.Property<string>("Seller")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SoldAmount")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Winner")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Auctions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afbee524-5972-4075-8800-7d1f9d7b0a0c"),
                            AuctionEnd = new DateTime(2025, 6, 15, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5368),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5491),
                            ReservePrice = 20000,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5563),
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("c8c3ec17-01bf-49db-82aa-1ef80b833a9f"),
                            AuctionEnd = new DateTime(2025, 8, 4, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5637),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5638),
                            ReservePrice = 90000,
                            Seller = "alice",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5638),
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("bbab4d5a-8565-48b1-9450-5ac2a5c4a654"),
                            AuctionEnd = new DateTime(2025, 6, 9, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5640),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5640),
                            ReservePrice = 0,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5640),
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("155225c1-4448-4066-9886-6786536e05ea"),
                            AuctionEnd = new DateTime(2025, 5, 26, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5642),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5642),
                            ReservePrice = 50000,
                            Seller = "tom",
                            Status = 2,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5642),
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("466e4744-4dc5-4987-aae0-b621acfc5e39"),
                            AuctionEnd = new DateTime(2025, 7, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5644),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5644),
                            ReservePrice = 20000,
                            Seller = "alice",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5644),
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("dc1e4071-d19d-459b-b848-b5c3cd3d151f"),
                            AuctionEnd = new DateTime(2025, 7, 20, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5657),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5657),
                            ReservePrice = 20000,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5657),
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("47111973-d176-4feb-848d-0ea22641c31a"),
                            AuctionEnd = new DateTime(2025, 6, 18, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5659),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5659),
                            ReservePrice = 150000,
                            Seller = "alice",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5659),
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("6a5011a1-fe1f-47df-9a32-b5346b289391"),
                            AuctionEnd = new DateTime(2025, 6, 24, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5661),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5661),
                            ReservePrice = 0,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5661),
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("40490065-dac7-46b6-acc4-df507e0d6570"),
                            AuctionEnd = new DateTime(2025, 6, 25, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5663),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5663),
                            ReservePrice = 20000,
                            Seller = "tom",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5663),
                            Winner = ""
                        },
                        new
                        {
                            Id = new Guid("3659ac24-29dd-407a-81f5-ecfe6f924b9b"),
                            AuctionEnd = new DateTime(2025, 7, 23, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5665),
                            CreatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5665),
                            ReservePrice = 20000,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 6, 5, 14, 3, 23, 528, DateTimeKind.Utc).AddTicks(5665),
                            Winner = ""
                        });
                });

            modelBuilder.Entity("AuctionService.Entities.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Mileage")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId")
                        .IsUnique();

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("142d4d9d-bc5e-4ddb-846f-30b325a91828"),
                            AuctionId = new Guid("afbee524-5972-4075-8800-7d1f9d7b0a0c"),
                            Color = "White",
                            ImageURL = "https://cdn.pixabay.com/photo/2016/05/06/16/32/car-1376190_960_720.jpg",
                            Make = "Ford",
                            Mileage = 50000,
                            Model = "GT",
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("81385bc5-a5ec-41dd-9e68-dae88c835265"),
                            AuctionId = new Guid("c8c3ec17-01bf-49db-82aa-1ef80b833a9f"),
                            Color = "Black",
                            ImageURL = "https://cdn.pixabay.com/photo/2012/05/29/00/43/car-49278_960_720.jpg",
                            Make = "Bugatti",
                            Mileage = 15035,
                            Model = "Veyron",
                            Year = 2018
                        },
                        new
                        {
                            Id = new Guid("e0df736a-5d1f-47c3-a21e-d2555470dfa5"),
                            AuctionId = new Guid("bbab4d5a-8565-48b1-9450-5ac2a5c4a654"),
                            Color = "Black",
                            ImageURL = "https://cdn.pixabay.com/photo/2012/11/02/13/02/car-63930_960_720.jpg",
                            Make = "Ford",
                            Mileage = 65125,
                            Model = "Mustang",
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("dc03f139-6f48-46b5-9459-fe0c0bfd8cb8"),
                            AuctionId = new Guid("155225c1-4448-4066-9886-6786536e05ea"),
                            Color = "Silver",
                            ImageURL = "https://cdn.pixabay.com/photo/2016/04/17/22/10/mercedes-benz-1335674_960_720.png",
                            Make = "Mercedes",
                            Mileage = 15001,
                            Model = "SLK",
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("1fd017e8-fce5-4fe2-89ff-d6d58f846e19"),
                            AuctionId = new Guid("466e4744-4dc5-4987-aae0-b621acfc5e39"),
                            Color = "White",
                            ImageURL = "https://cdn.pixabay.com/photo/2017/08/31/05/47/bmw-2699538_960_720.jpg",
                            Make = "BMW",
                            Mileage = 90000,
                            Model = "X1",
                            Year = 2017
                        },
                        new
                        {
                            Id = new Guid("755553b1-5d0c-4d06-9d5c-20e4be7438fe"),
                            AuctionId = new Guid("dc1e4071-d19d-459b-b848-b5c3cd3d151f"),
                            Color = "Red",
                            ImageURL = "https://cdn.pixabay.com/photo/2017/11/09/01/49/ferrari-458-spider-2932191_960_720.jpg",
                            Make = "Ferrari",
                            Mileage = 50000,
                            Model = "Spider",
                            Year = 2015
                        },
                        new
                        {
                            Id = new Guid("071af034-1bfd-45d3-a9f5-a9c8a3d4c773"),
                            AuctionId = new Guid("47111973-d176-4feb-848d-0ea22641c31a"),
                            Color = "Red",
                            ImageURL = "https://cdn.pixabay.com/photo/2017/11/08/14/39/ferrari-f430-2930661_960_720.jpg",
                            Make = "Ferrari",
                            Mileage = 5000,
                            Model = "F-430",
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("31cf12e2-dd6f-427e-82f2-9556bc747f77"),
                            AuctionId = new Guid("6a5011a1-fe1f-47df-9a32-b5346b289391"),
                            Color = "White",
                            ImageURL = "https://cdn.pixabay.com/photo/2019/12/26/20/50/audi-r8-4721217_960_720.jpg",
                            Make = "Audi",
                            Mileage = 10050,
                            Model = "R8",
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("9ba6aae5-99ea-4353-a23a-90e9bd269b62"),
                            AuctionId = new Guid("40490065-dac7-46b6-acc4-df507e0d6570"),
                            Color = "Black",
                            ImageURL = "https://cdn.pixabay.com/photo/2016/09/01/15/06/audi-1636320_960_720.jpg",
                            Make = "Audi",
                            Mileage = 25400,
                            Model = "TT",
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("86b4c3db-1e12-4eac-b7d1-08ec0332507b"),
                            AuctionId = new Guid("3659ac24-29dd-407a-81f5-ecfe6f924b9b"),
                            Color = "Rust",
                            ImageURL = "https://cdn.pixabay.com/photo/2017/08/02/19/47/vintage-2573090_960_720.jpg",
                            Make = "Ford",
                            Mileage = 150150,
                            Model = "Model T",
                            Year = 1938
                        });
                });

            modelBuilder.Entity("AuctionService.Entities.Models.Item", b =>
                {
                    b.HasOne("AuctionService.Entities.Models.Auction", "Auction")
                        .WithOne("Item")
                        .HasForeignKey("AuctionService.Entities.Models.Item", "AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("AuctionService.Entities.Models.Auction", b => b.Navigation("Item")
                        .IsRequired());
#pragma warning restore 612, 618
        }
    }
}
